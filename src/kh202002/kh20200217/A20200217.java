package kh202002.kh20200217;

public class A20200217 {

//	메소드 바인딩, Binding
//	 - 메소드의 호출코드와 메소드의 정의코드(구현코드)를 연결하는 과정
//
//		ex)
//			public void out() {
//			  System.out.println("TEST");
//			}
//
//			test.out();
//	
//	정적 바인딩 : 컴파일 시점에 바인딩한다.
//	동적 바인딩 : 실행 도중에 메소드가 호출될 때 바인딩
//	
//	** 자바는 기본적으로 동적 바인딩을 한다.

// Super 키워드
// super
// 	- 부모객체 참조
// 	- 자식 클래스에서 부모 클래스의 멤버에 접근할 때 사용한다.
// 	- 자식 클래스에서 정의한 이름(식별자)과 상속받은 부모클래스의 이름(식별자)이 중복될 때 구분하기 위해 사용할 수 있다.
// 
//	ex) this.num = 10; 		// 자식 클래스에서 정의한 멤버필드 num 
// 		super.num = 20; 	// 부모 클래스에서 정의한 멤버필드 num
// 
// 오버라이딩이 되어 있는 경우
// this.display();		// 오버라이딩한 메소드
// super.display();		// 오버라이딩 전 부모 메소드
// 
// 
// super()
// 	- 슈퍼 생성자 호출
// 	- 자식 클래스의 생성자에서 부모 클래스의 생성자를 호출할 때 사용
//  - 전달인자를 넣어 사용 가능하다. (부모 클래스에 정의되어있을 때만 가능하다)
//  - 따로 호출하지 않으면 Default 생성자를 호출하게 된다.
//  - 자식 클래스의 생성자에서 첫번째 코드로 사용해야한다.

// final 키워드	
//	- 변수
//		- 딱 한번만 초기화(대입)할 수 있도록 설정한다.
//		- 변수를 상수화 시킨다.
//	ex) public final int MAX = 5;
//		public static final int LEN = 10;
//	
//	- 메소드
//		- 더 이상 오버라이딩 할 수 없도록 설정
//	ex) public final void out() { 
//			자식 클래스에서 재정의 불가능
//		}
//	
//	- 클래스
//		- 더 이상 자식 클래스를 생성할 수 없도록 설정
//	ex) public final class Child {
//			자식 클래스를 만들 수 없음.				
//			상속을 줄 수 없게 만듦
//
}